{"version":3,"file":"dist/object-transformation-utils.min.js","mappings":"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","sources":["webpack://data-transformation-utils/webpack/universalModuleDefinition","webpack://data-transformation-utils/./bundle.js","webpack://data-transformation-utils/./libs/transformer/transformer.js","webpack://data-transformation-utils/./libs/transformer/transformationChain.js","webpack://data-transformation-utils/./libs/helpers/isFunction.js","webpack://data-transformation-utils/./libs/transformer/twoWayTransformer.js","webpack://data-transformation-utils/webpack/bootstrap","webpack://data-transformation-utils/webpack/before-startup","webpack://data-transformation-utils/webpack/startup","webpack://data-transformation-utils/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","const Transformer = require( './libs/transformer/transformer' )\r\nconst TwoWayTransformer = require( './libs/transformer/twoWayTransformer' )\r\n\r\n\r\nmodule.exports = {\r\n  Transformer,\r\n  TwoWayTransformer\r\n}\r\n","const TransformationChain = require( './transformationChain' )\r\n\r\nmodule.exports = class Transformer {\r\n  constructor( transformationChain ) {\r\n    this.chain = new TransformationChain( transformationChain )\r\n  }\r\n\r\n  applyTransformations( transformativeValue, keepTypeof = true ) {\r\n    let valueRef = transformativeValue\r\n\r\n    for( let i = 0; i < this.chain.transformationArray.length; ++i ) {\r\n      const transformation = this.chain.transformationArray[ i ]\r\n      valueRef = transformation( valueRef )\r\n\r\n      if( keepTypeof ) {\r\n        this.compareValuesTypeof( transformativeValue, valueRef, i )\r\n      }\r\n\r\n      // if transformativeValue is reference and transformation changes reference value, but transformation returns nothing\r\n      valueRef = valueRef === undefined ? transformativeValue : valueRef\r\n    }\r\n\r\n    return valueRef\r\n  }\r\n\r\n  compareValuesTypeof( transformativeValue, valueRef, transformationIndex ) {\r\n    if( typeof valueRef !== typeof transformativeValue ) {\r\n      throw TypeError( `One of functions return changed type of value;\\n\r\n            Transformation index is ${ transformationIndex }` )\r\n    }\r\n  }\r\n}\r\n","const { isFunction } = require( '../helpers/isFunction' )\r\n\r\nmodule.exports = class TransformationChain {\r\n  constructor( transformationArray ) {\r\n    this.transformationArray = []\r\n\r\n    for( const transformation of transformationArray ) {\r\n      if( !isFunction( transformation ) ) {\r\n        throw new TypeError( 'One of passed transformations is not typeof \\'function\\'' )\r\n      } else {this.transformationArray.push( transformation )}\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports.isFunction = ( val ) => typeof val === 'function'\n","const Tranformer = require('./transformer')\nconst TransformationChain = require('./transformationChain')\n\nmodule.exports = class TwoWayTransformer extends Tranformer {\n    static MODS = {\n            DIRECT: 'DIRECT_MODE',\n            INVERSE: 'INVERSE_MODE'\n    }\n\n    constructor( transformationMods ) {\n        super([])\n\n        this.transformationMods = {}\n\n        this.transformationMods[TwoWayTransformer.MODS.DIRECT] = this.createChain(transformationMods[TwoWayTransformer.MODS.DIRECT])\n        this.transformationMods[TwoWayTransformer.MODS.INVERSE] = this.createChain(transformationMods[TwoWayTransformer.MODS.INVERSE])\n    }\n\n    createChain(transformationArray) {\n        return new TransformationChain(transformationArray)\n    }\n\n    directTranform( transformativeValue, keepTypeof ) {\n        // switch this.chain ref to transformation chain in accordance with mode\n        this.chain = this.transformationMods[TwoWayTransformer.MODS.DIRECT]\n        return this.applyTransformations(transformativeValue, keepTypeof)\n    }\n\n    inverseTransform( transformativeValue, keepTypeof) {\n        this.chain = this.transformationMods[TwoWayTransformer.MODS.INVERSE]\n        return this.applyTransformations(transformativeValue, keepTypeof)\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(0);\n",""],"names":["Transformer","require","TwoWayTransformer","module","exports","TransformationChain","transformationChain","chain","transformativeValue","keepTypeof","valueRef","i","transformationArray","length","transformation","compareValuesTypeof","undefined","transformationIndex","TypeError","isFunction","push","val","Tranformer","transformationMods","MODS","DIRECT","createChain","INVERSE","applyTransformations"],"sourceRoot":""}